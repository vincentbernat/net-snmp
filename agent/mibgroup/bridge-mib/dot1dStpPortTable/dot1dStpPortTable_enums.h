/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 *
 * $Id:$
 */
#ifndef DOT1DSTPPORTTABLE_ENUMS_H
#define DOT1DSTPPORTTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table dot1dStpPortTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * dot1dStpPortState (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef DOT1DSTPPORTSTATE_ENUMS
#define DOT1DSTPPORTSTATE_ENUMS

#define DOT1DSTPPORTSTATE_DISABLED  1 
#define DOT1DSTPPORTSTATE_BLOCKING  2 
#define DOT1DSTPPORTSTATE_LISTENING  3 
#define DOT1DSTPPORTSTATE_LEARNING  4 
#define DOT1DSTPPORTSTATE_FORWARDING  5 
#define DOT1DSTPPORTSTATE_BROKEN  6 

#endif /* DOT1DSTPPORTSTATE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * dot1dStpPortEnable (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef DOT1DSTPPORTENABLE_ENUMS
#define DOT1DSTPPORTENABLE_ENUMS

#define DOT1DSTPPORTENABLE_ENABLED  1 
#define DOT1DSTPPORTENABLE_DISABLED  2 

#endif /* DOT1DSTPPORTENABLE_ENUMS */




#ifdef __cplusplus
}
#endif

#endif /* DOT1DSTPPORTTABLE_ENUMS_H */
